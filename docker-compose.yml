services:
  backend:
    build:
      context: ./backend
      target: runtime
    environment:
      ASPNETCORE_ENVIRONMENT: ${ASPNETCORE_ENVIRONMENT:-Production}
      ASPNETCORE_URLS: http://0.0.0.0:${BACKEND_PORT:-4000}
      PORT: ${BACKEND_PORT:-4000}
    ports:
      - "${BACKEND_PORT:-4000}:4000"
    depends_on:
      - postgres
    restart: unless-stopped

  frontend:
    build:
      context: ./frontend
      target: runner
    environment:
      NODE_ENV: ${NODE_ENV:-production}
      NEXT_PUBLIC_API_URL: ${NEXT_PUBLIC_API_URL:-http://backend:4000/api}
      PORT: ${FRONTEND_PORT:-3000}
    ports:
      - "${FRONTEND_PORT:-3000}:3000"
    depends_on:
      - backend
    restart: unless-stopped

  postgres:
    image: postgres:15-alpine
    restart: unless-stopped
    environment:
      POSTGRES_USER: ${POSTGRES_USER:-uknf}
      POSTGRES_PASSWORD: ${POSTGRES_PASSWORD:-uknf}
      POSTGRES_DB: ${POSTGRES_DB:-uknf_platform}
    ports:
      - "${POSTGRES_PORT:-5432}:5432"
    volumes:
      - postgres-data:/var/lib/postgresql/data

volumes:
  frontend-node-modules:
  frontend-next-cache:
  postgres-data:
